[tool.poetry]
name = "starlette-context"
version = "0.3.6"
description = "Middleware for Starlette that allows you to store and access the context data of a request. Can be used with logging so logs automatically use request headers such as x-request-id or x-correlation-id."
authors = ["Tom Wojcik <starlette-context-pkg@tomwojcik.com>"]
license = "MIT"
readme = "README.rst"
classifiers = [
    'Development Status :: 3 - Alpha',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Intended Audience :: Developers',
    'Intended Audience :: Information Technology',
    'Intended Audience :: System Administrators',
    'License :: OSI Approved :: MIT License',
    'Topic :: Internet',
]
homepage = "https://github.com/tomwojcik/starlette-context"
repository = "https://github.com/tomwojcik/starlette-context"
keywords = ["middleware", "starlette", "fastapi"]
documentation = "https://starlette-context.readthedocs.io/"
packages = [
    { include = "starlette_context" },
]

[tool.poetry.dependencies]
python = "^3.8"
starlette = "*"


[tool.poetry.group.dev.dependencies]
coverage = "^7.0.2"
pytest = "^7.2.0"
pytest-cov = "^4.0.0"
pytest-sugar = "^0.9.6"
pytest-xdist = "^3.1.0"
pytest-asyncio = "^0.20.3"
codecov = "^2.1.12"
httpx = "^0.23.2"


[tool.poetry.group.docs.dependencies]
sphinx = ">=5,<5.1"
sphinx-rtd-theme = "^1.1.1"
toml = "^0.10.2"


[tool.poetry.group.code-quality.dependencies]
black = "^23.1.0"
ruff = "^0.0.241"
bandit = "^1.7.4"
mypy = "^0.991"
docformatter = "^1.5.1"
pyupgrade = "^3.3.1"
pre-commit = "^3.0.4"
pre-commit-hooks = "^4.4.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 79
target-version = ['py37', 'py38']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  # The following are specific to Black, you probably don't want those.
  | blib2to3
  | tests/data
  | profiling
)/
'''
preview = true

[tool.ruff]
select = ["E", "F"]
ignore = []

fixable = ["A", "B", "C", "D", "E", "F"]
unfixable = []

exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "migrations"
]
line-length = 79
target-version = "py38"

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true

[tool.ruff.per-file-ignores]
"starlette_context/plugins/__init__.py" = ["F401"]

[tool.docformatter]
recursive = true
pre-summary-newline = true
make-summary-multi-line = true
wrap-summaries = 79
wrap-descriptions = 79
in-place = true
