[tool.poetry]
name = "starlette-context"
version = "0.4.0"
description = "Middleware for Starlette that allows you to store and access the context data of a request. Can be used with logging so logs automatically use request headers such as x-request-id or x-correlation-id."
authors = ["Tom Wojcik <starlette-context-pkg@tomwojcik.com>"]
license = "MIT"
readme = "README.md"
classifiers = [
    'Development Status :: 4 - Beta',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Intended Audience :: Developers',
    'Intended Audience :: Information Technology',
    'Intended Audience :: System Administrators',
    'License :: OSI Approved :: MIT License',
    'Topic :: Internet',
]
homepage = "https://github.com/tomwojcik/starlette-context"
repository = "https://github.com/tomwojcik/starlette-context"
keywords = ["middleware", "starlette", "fastapi"]
documentation = "https://starlette-context.readthedocs.io/"
packages = [
    { include = "starlette_context" },
]

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
starlette = ">=0.27.0"


[tool.poetry.group.dev.dependencies]
coverage = "^7.4.1"
pytest = "^7.4.4"
pytest-cov = ">=4.1,<7.0"
pytest-sugar = "^0.9.7"
pytest-xdist = "^3.5.0"
pytest-asyncio = "^0.23.4"
codecov = "^2.1.13"
httpx = "^0.27.0"


[tool.poetry.group.docs.dependencies]
sphinx = ">=7.2.6"
sphinx-rtd-theme = "^2.0.0"
toml = "^0.10.2"
myst-parser = "^2.0.0"


[tool.poetry.group.code-quality.dependencies]
black = ">=24.2,<26.0"
ruff = "^0.3.0"
bandit = "^1.7.6"
mypy = "^1.8.0"
docformatter = "^1.7.5"
pyupgrade = "^3.15.0"
pre-commit = "~2.21.0"
pre-commit-hooks = ">=4.4,<6.0"
types-requests = "^2.31.0.20240311"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 79
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  # The following are specific to Black, you probably don't want those.
  | blib2to3
  | tests/data
  | profiling
)/
'''
preview = true

[tool.ruff]
target-version = "py39"
line-length = 79

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "F",    # pyflakes
    "I",    # isort
    "C4",   # flake8-comprehensions
    "SIM",  # flake8-simplify
    "TCH",  # flake8-type-checking
    "TID",  # flake8-tidy-imports
    "UP",   # pyupgrade
]
ignore = ["TID252"]

[tool.ruff.lint.isort]
known-first-party = ["starlette_context"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.per-file-ignores]
"starlette_context/plugins/__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.docformatter]
recursive = true
pre-summary-newline = true
make-summary-multi-line = true
wrap-summaries = 79
wrap-descriptions = 79
in-place = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
addopts = "--strict-markers --asyncio-mode=auto"
markers = [
    "asyncio: marks tests as asyncio tests",
]
