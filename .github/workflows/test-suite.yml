name: Tests
on: [ push ]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        python-version: [ 3.7, 3.8, 3.9, '3.10', 3.11]
        poetry-version: [ 1.2.0 ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3.2.0
      - uses: actions/setup-python@v4.3.0
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install dependencies
        run: poetry install --with dev
      - name: Run tests
        run: scripts/test
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.xml
          fail_ci_if_error: true
          verbose: true

  code-quality:
    strategy:
      fail-fast: false
      matrix:
        python-version: [ 3.8 ]
        poetry-version: [ 1.2.0 ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3.2.0
      - uses: actions/setup-python@v4.3.0
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install dependencies
        run: poetry install --with code-quality
      - name: Run black
        run: poetry run black starlette_context --check
      - name: Run ruff
        run: poetry run ruff starlette_context check --diff
      - name: Run bandit
        run: poetry run bandit starlette_context
      - name: Run mypy
        run: poetry run mypy starlette_context
      - name: Run docformatter
        run: poetry run docformatter starlette_context
      - name: Run pyupgrade
        run: poetry run pyupgrade
